<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo 博客添加 Live2d 小人</title>
      <link href="/2022/06/05/Hexo%20%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%20Live2d%20%E5%B0%8F%E4%BA%BA/"/>
      <url>/2022/06/05/Hexo%20%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%20Live2d%20%E5%B0%8F%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-博客添加-Live2d-小人"><a href="#Hexo-博客添加-Live2d-小人" class="headerlink" title="Hexo 博客添加 Live2d 小人"></a>Hexo 博客添加 Live2d 小人</h1><h3 id="一、安装hexo-helper-live2d插件"><a href="#一、安装hexo-helper-live2d插件" class="headerlink" title="一、安装hexo-helper-live2d插件"></a>一、安装hexo-helper-live2d插件</h3><p>**现在假设你已经又一个使用<code>hexo</code>搭建的博客，然后我们安装<a href="https://github.com/EYHN/hexo-helper-live2d">hexo-helper-live2d</a>模块</p><p><a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md">hexo-helper-live2d官方中文文档</a></p><blockquote><p>npm install –save hexo-helper-live2d</p></blockquote><h3 id="二、添加配置文件"><a href="#二、添加配置文件" class="headerlink" title="二、添加配置文件"></a>二、添加配置文件</h3><p>在<code>hexo</code>博客到<code>_config.yml</code>文件添加以下配置 建议在根目录下的<code>_config.yml</code>配置，这样以后换了主题就不用重新配置了 当然也可以在<code>themes</code>下的<code>_config.yml</code>配置但是要注意模型目录要填写正确</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">   enable: true  # 是否启动</span><br><span class="line">   scriptFrom: local # 默认</span><br><span class="line">   pluginRootPath: live2dw/  # 插件在站点上的根目录(相对路径)</span><br><span class="line">   pluginJsPath: lib/  # 脚本文件相对与插件根目录路径</span><br><span class="line">   pluginModelPath: assets/  # 模型文件相对与插件根目录路径</span><br><span class="line">   tagMode: false  # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br><span class="line">   debug: false  # 调试, 是否在控制台输出日志</span><br><span class="line">   model:</span><br><span class="line">     use: live2d-widget  ## 模型文件</span><br><span class="line">   display:</span><br><span class="line">     position: right # 定位方向 left right top bottom</span><br><span class="line">     width: 150  # 小人宽度</span><br><span class="line">     height: 300 #  小人高度</span><br><span class="line">     hOffset: -15  # 向</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库概述</title>
      <link href="/2022/05/05/%E7%AC%AC01%E8%8A%82%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/"/>
      <url>/2022/05/05/%E7%AC%AC01%E8%8A%82%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="数据库的基本概念"><a href="#数据库的基本概念" class="headerlink" title="数据库的基本概念"></a>数据库的基本概念</h3><p>数据库用来存储应用程序中的数据：比如电商网站，商品信息，用户信息，都是应该持久化存储的，不能像一个变量一个，放在内存中， 服务器重启就消失了，所以需要将数据存储在数据库中，达到持久化存储的目的。</p><h3 id="常用的关系型数据库"><a href="#常用的关系型数据库" class="headerlink" title="常用的关系型数据库"></a>常用的关系型数据库</h3><ol><li>MySQL：开源免费。</li><li>Oracle：大型系统（银行系统、ERP系统、医院系统等，Java体系）</li><li>sql server：基于windows server服务器中使用，c# .net体系</li></ol><h3 id="存储数据的方式"><a href="#存储数据的方式" class="headerlink" title="存储数据的方式"></a>存储数据的方式</h3><p>二维表，像是一个个excel文件。</p><h1 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h1><h3 id="一、下载mysql"><a href="#一、下载mysql" class="headerlink" title="一、下载mysql"></a>一、下载mysql</h3><p>这里推荐下载mysql5.7.23版本：<a href="https://downloads.mysql.com/archives/community/">下载地址</a></p><h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><ol><li><p>将下载后的压缩包解压到本地，例如c盘根目录。C:\mysql-5.7.23-winx64</p></li><li><p>在mysql目录中创建一个空的data目录和一个mysql.ini文件</p><p>ini文件内容如下</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8 </span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置3306端口</span></span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attr">basedir</span>=F:\mysql\mysql-<span class="number">5.7</span>.<span class="number">24</span>-winx64\mysql-<span class="number">5.7</span>.<span class="number">24</span>-winx64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="attr">datadir</span>=F:\mysql\mysql-<span class="number">5.7</span>.<span class="number">24</span>-winx64\mysql-<span class="number">5.7</span>.<span class="number">24</span>-winx64\data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量，将mysql&#x2F;bin目录加到path中。</p></li><li><p>执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user=mysql</span><br><span class="line">mysqld install <span class="comment">#创建服务，需要以管理员的权限打开命令行工具</span></span><br><span class="line">net start mysql <span class="comment">#启动服务</span></span><br></pre></td></tr></table></figure></li><li><p>链接mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li><li><p>修改密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p password</span><br><span class="line"><span class="comment"># 先输入旧密码，默认为空，直接回车即可，然后输入两次新密码。</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Http协议</title>
      <link href="/2022/04/07/HTTP%E5%8D%8F%E8%AE%AE/"/>
      <url>/2022/04/07/HTTP%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>HTTP</strong>协议(超文本传输协议HyperText Transfer Protocol)，它是基于TCP协议的应用层传输协议，是客户端和服务端进行数据传输的一种规则。</p><p>HTTP 是一种无状态 (stateless) 协议, HTTP协议本身不会对发送过的请求和相应的通信状态进行持久化处理。这样做的目的是为了保持HTTP协议的简单性，从而能够快速处理大量的事务, 提高效率。</p><p>但是，很多应用场景中，我们需要保持各种状态，如：登录状态等。我们就必须引入一些技术来记录管理状态，例如Cookie。</p><h2 id="HTTP请求"><a href="#HTTP请求" class="headerlink" title="HTTP请求"></a>HTTP请求</h2><p>在HTTP请求中，包含了请求行，请求头，请求体三个部。</p><p>请求行：由请求Method、URL、HTTP Version三部分构成,<br>总的来说请求行就是定义了本次请求的请求方式, 请求的地址, 以及所遵循的HTTP协议版本</p><p>请求头：由一系列的键值对组成，允许客户端向服务器端发送一些附加信息或者客户端自身的信息</p><p>请求体：在发送POST请求时才会有请求正文，GET方法并没有请求正文。</p><h2 id="HTTP响应"><a href="#HTTP响应" class="headerlink" title="HTTP响应"></a>HTTP响应</h2><p>HTTP响应也由三部分组成，包括状态行，消息报头，响应正文。详情如上图所示。</p><p>常见的响应状态码如下：</p><table><thead><tr><th>状态码</th><th>语义</th><th>描述</th></tr></thead><tbody><tr><td>200</td><td>Ok</td><td>请求成功</td></tr><tr><td>301</td><td>Moved Permanently</td><td>永久重定向</td></tr><tr><td>302</td><td>Found</td><td>临时重定向</td></tr><tr><td>404</td><td>Not Found</td><td>页面不存在</td></tr><tr><td>405</td><td>Method Not Allowed</td><td>客户端的请求方法被禁止</td></tr><tr><td>500</td><td>Internal Server Error</td><td>服务器内部错误</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Homebrew介绍</title>
      <link href="/2022/04/05/homebrew%E5%AE%89%E8%A3%85%E3%80%81%E5%8D%B8%E8%BD%BD%E3%80%81%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/04/05/homebrew%E5%AE%89%E8%A3%85%E3%80%81%E5%8D%B8%E8%BD%BD%E3%80%81%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="homebrew安装、卸载、基本操作"><a href="#homebrew安装、卸载、基本操作" class="headerlink" title="homebrew安装、卸载、基本操作"></a>homebrew安装、卸载、基本操作</h1><h2 id="一、Homebrew是什么？Homebrew的安装和使用"><a href="#一、Homebrew是什么？Homebrew的安装和使用" class="headerlink" title="一、Homebrew是什么？Homebrew的安装和使用"></a>一、Homebrew是什么？Homebrew的安装和使用</h2><p>**Homebrew ** 是一款Mac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。简单的一条指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。</p><h3 id="1-1名词概念"><a href="#1-1名词概念" class="headerlink" title="1.1名词概念"></a>1.1名词概念</h3><p><strong>brew</strong>（意为酿酒）的命名很有意思，全部都使用了酿酒过程中采用的材料&#x2F;器具，名词对应以下的概念：</p><p><strong>Tap</strong> （水龙头）程序包的源</p><p><strong>Bottle</strong> （瓶子）编译打包好的程序包</p><p><strong>Formula</strong>（配方） 程序包定义，本质上是一个rb文件.代指软件包名,如git(实际操作: brew install git)</p><p><strong>Keg</strong> （桶）程序包的安装路径</p><p><strong>Cellar</strong> （地窖）所有程序包（桶）的根目录</p><p>最终编译安装完毕的程序就是一桶酿造好的酒。</p><h3 id="二、brew-安装脚本-（自动选择软件源）"><a href="#二、brew-安装脚本-（自动选择软件源）" class="headerlink" title="二、brew 安装脚本 （自动选择软件源）"></a>二、brew 安装脚本 （自动选择软件源）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot;</span><br></pre></td></tr></table></figure><h3 id="三、brew-卸载脚本"><a href="#三、brew-卸载脚本" class="headerlink" title="三、brew 卸载脚本"></a>三、brew 卸载脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/HomebrewUninstall.sh)&quot;</span><br></pre></td></tr></table></figure><h3 id="四、常用命令"><a href="#四、常用命令" class="headerlink" title="四、常用命令"></a>四、常用命令</h3><p>安装软件：<code>brew install xxx</code></p><p>卸载软件：<code>brew uninstall xxx</code></p><p>搜索软件：<code>brew search xxx</code></p><p>更新软件：<code>brew upgrade xxx</code></p><p>查看列表：<code>brew list</code></p><p>更新brew：<code>brew update</code></p><p>清理所有包的旧版本：<code>brew cleanup</code></p><p>清理指定包的旧版本：<code>brew cleanup $FORMULA</code></p><p>查看可清理的旧版本包，不执行实际操作：<code>brew cleanup -n</code></p><p>本地软件库列表：brew ls</p><p>查找软件：brew search google（其中google替换为要查找的关键字）</p><p>查看brew版本：brew -v 更新brew版本：brew update</p><p>安装cask软件：brew install –cask firefox 把firefox换成你要安装的</p>]]></content>
      
      
      
        <tags>
            
            <tag> Homebrew </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven基础知识</title>
      <link href="/2021/07/06/java/day07-Maven%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2021/07/06/java/day07-Maven%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Maven简介"><a href="#1-Maven简介" class="headerlink" title="1.Maven简介"></a>1.Maven简介</h1><p>Maven是专门用于管理和构建Java项目的工具，它的主要功能有：</p><p>1.1提供了一套标准化的项目结构</p><ul><li>不同的IDE之间，项目结构不一样，不通用。</li></ul><p><strong>Maven提供了一套标准化的项目结构，所有IDE使用Maven构建的项目结构完全一样，所有IDE创建的Maven项目可以通用。</strong>（这样大家都使用通用的模版，更容易理解）</p><p><img src="https://cdn.jsdelivr.net/gh/FanMiLi666/picgo/img/WX20220706-162504@2x.png" alt="WX20220706-162504@2x"></p><p>1.2提供了一套标准化的构建流程（编译，测试，打包，发布…..）</p><p><img src="https://cdn.jsdelivr.net/gh/FanMiLi666/picgo/img/WX20220706-162659@2x.png" alt="WX20220706-162659@2x"></p><p><strong>Maven提供了一套简单的命令来完成项目构建</strong>（自己虽然也可以做，但是很琐碎）</p><p>**1.3&lt;提供了一套依赖管理机制**&gt;</p><p>依赖管理其实就是管理你项目所依赖的第三方资源（jar包、插件…..）</p><p>通俗点说：还是为了方便，之前所做的一般来说三步：1.下载jar包。2.复制jar包到项目。3.将jar包加入工作环境。</p><p>但是jar包多了以后就很麻烦，而且jar包下载也很头痛。也是Maven最重要的</p><p><strong>maven是一个管理jar包直接上坐标就能自动下载对应jar包的工具，通过坐标来下载。</strong></p><h1 id="2-Maven常用命令"><a href="#2-Maven常用命令" class="headerlink" title="2.Maven常用命令"></a>2.Maven常用命令</h1><p>compile：编译</p><p>clean：清理</p><p>test：测试</p><p>package：打包</p><p>Install：安装</p><h2 id="2-1Maven生命周期"><a href="#2-1Maven生命周期" class="headerlink" title="2.1Maven生命周期"></a>2.1Maven生命周期</h2><p>Maven构建项目生命周期描述的是一次构建过程经历经历多少个事件</p><p>Maven对项目构建的生命周期划分为三套</p><p>clean：清理工作</p><p>default：核心工作，例如编译，测试，打包，安装等</p><p>site：产生报告，发布站点</p><h1 id="3-IDEA配置Maven"><a href="#3-IDEA配置Maven" class="headerlink" title="3. IDEA配置Maven"></a>3. IDEA配置Maven</h1><h2 id="3-1-IDEA配置Maven环境"><a href="#3-1-IDEA配置Maven环境" class="headerlink" title="3.1 IDEA配置Maven环境"></a>3.1 IDEA配置Maven环境</h2><p> 导入即可，太简单了，设置里有</p><h2 id="3-2-Maven坐标详解"><a href="#3-2-Maven坐标详解" class="headerlink" title="3.2 Maven坐标详解"></a>3.2 Maven坐标详解</h2><p>1.什么是坐标：</p><p>Maven中的坐标是资源的唯一标识</p><p>使用坐标来定义项目或引入项目中所需要的依赖</p><p>2.Maven坐标组成</p><ul><li><p><strong>groupld：</strong>定义当前Maven项目隶属组织名称（通常是域名反写，例如：com.baidu）</p></li><li><p><strong>artifactld：</strong>定义当前Maven项目名称（通常是模块名称，例如order-service、goods-service）</p></li><li><p><strong>version：</strong>定义当前项目版本号。 例如1.1都可以</p></li></ul><p>2.导入idea</p><p>这里只需要导入Maven 的pom文件就可以了，不需要导入项目</p><p><img src="https://cdn.jsdelivr.net/gh/FanMiLi666/picgo/img/image-20220706172502068.png" alt="image-20220706172502068"></p><h1 id="4-依赖管理"><a href="#4-依赖管理" class="headerlink" title="4.依赖管理"></a>4.依赖管理</h1><p>第一步是进入pom文件，首先查看我们项目的坐标</p><p><img src="https://cdn.jsdelivr.net/gh/FanMiLi666/picgo/img/image-20220706172958070.png" alt="image-20220706172958070"></p><p>我们所有的jar包都是在dependencies</p><p>导包设置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--导入mysql 驱动jar包--&gt;</span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;<span class="number">8.0</span><span class="number">.29</span>&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>在依赖项可以查看到，但记得要刷新maven项目，或者是自己添加依赖项，command+n，输入自己所添加的jar包名称，（好处是不用输代码，直接生成,但往往会出来一堆，要自己记住版本号，有些不是很好找）</p><h2 id="4-1依赖范围"><a href="#4-1依赖范围" class="headerlink" title="4.1依赖范围"></a>4.1依赖范围</h2><p>通过设置坐标的依赖范围（scope）可以设置对应jar包的作用范围：<strong>编译环境、测试环境、运行环境</strong>。简单的说，我添加了这个scope，我想让哪个包就用让哪个类用。</p><p><img src="https://cdn.jsdelivr.net/gh/FanMiLi666/picgo/img/image-20220706204406585.png" alt="image-20220706204406585"></p><p>此外也可以设置依赖范围，但大多情况默认就好。<strong>多了不如少了</strong></p><p>简单的一些Maven基础知识就这么多了。</p>]]></content>
      
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java方法</title>
      <link href="/2020/07/06/java/day06-%E6%96%B9%E6%B3%95/"/>
      <url>/2020/07/06/java/day06-%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h2><p>啥是面向对象？</p><p>面向：找、拿。</p><p>对象：东西。</p><p>面向对象编程：找或拿东西过来编程。</p><h2 id="2-类"><a href="#2-类" class="headerlink" title="2.类"></a>2.类</h2><p>如果要用对象，必须先设计类，创建对象并使用</p><p>类（设计图）：是对象共同特征的描述；</p><p>对象：是真实存在的具体实例。 </p><p><strong>结论：在Java中，必须先设计类，才能创建对象并使用。</strong></p><h3 id="2-1如何设计类"><a href="#2-1如何设计类" class="headerlink" title="2.1如何设计类"></a>2.1如何设计类</h3><p><img src="https://cdn.jsdelivr.net/gh/FanMiLi666/picgo/img/%E7%B1%BB.png" alt="类"></p><p>案例：</p><p>定义一个Car类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.javabean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Car</span> &#123;</span><br><span class="line">    <span class="comment">/*成员变量*/</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">double</span> price;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*方法*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;启动了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;价格是&quot;</span> + price);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类调用Car类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.javabean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建汽车对象</span></span><br><span class="line">        <span class="type">Car</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Car</span>();</span><br><span class="line">        c.name = <span class="string">&quot;bwm&quot;</span>;</span><br><span class="line">        c.price = <span class="number">465</span>;</span><br><span class="line">        c.start();</span><br><span class="line">        c.run();</span><br><span class="line"></span><br><span class="line">        <span class="type">Car</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Car</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>idea中的f：field(类的属性)</p><p>m:method(方法)</p><p><img src="https://cdn.jsdelivr.net/gh/FanMiLi666/picgo/img/image-20220704155004410.png" alt="image-20220704155004410"></p><h3 id="2-2类的补充"><a href="#2-2类的补充" class="headerlink" title="2.2类的补充"></a>2.2类的补充</h3><p>1.类名要大写，不能用关键字，驼峰模式，合法标识，且有意义</p><p>2.一个Java文件中可以定义多个class类，但只能有一个public类，其他的类不能加public，并且，public修饰的类必须成为代码文件名。</p><p>重要：所以实际开发还是建议一个代码文件定义一个类</p><p>3.成员变量的完整定义格式是：修饰符 数据类型 变量名称 &#x3D; 初始化值；</p><p>一般无需指定初始值，存在默认值。</p><p><strong>默认值的规则：</strong></p><p>byte short int long :   0</p><p>double float :  0.0</p><p>Boolean : false</p><p>String : null</p><p>例子：</p><p>通常写的：String name；</p><p>实际上：String name &#x3D; null；（null是系统默认的）</p><h2 id="3-构造器-有参和无参"><a href="#3-构造器-有参和无参" class="headerlink" title="3.构造器(有参和无参)"></a>3.构造器(有参和无参)</h2><h3 id="3-1构造器的作用"><a href="#3-1构造器的作用" class="headerlink" title="3.1构造器的作用"></a>3.1构造器的作用</h3><p>定义在类的，可以用于初始化一个类的对象，并<strong>返回对象的地址。****说白了，可以通过它得到一个对象</strong></p><ul><li>初始化类的对象，并返回对象的地址。</li></ul><p>Car c &#x3D; new Car();</p><h3 id="3-2构造器的使用"><a href="#3-2构造器的使用" class="headerlink" title="3.2构造器的使用"></a>3.2构造器的使用</h3><p>无参构造器，默认存在的。</p><p>有参构造器，在初始化对象的时候，<strong>同时可以接受参数为对象进行赋值。</strong></p><p>案例：</p><p>创建一个Shop类，定义有参无参。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">String name;</span><br><span class="line"><span class="type">double</span> price;</span><br><span class="line"></span><br><span class="line"><span class="comment">//无参数的构造函数</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Shop</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;这是无参&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参数的构造函数</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Shop</span><span class="params">(String name, <span class="type">double</span> price)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;这是有参&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.price = price;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个People类，使用Shop类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Shop</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Shop</span>();</span><br><span class="line">    s.name = <span class="string">&quot;无参，括号里没函数&quot;</span>;</span><br><span class="line">    s.price = <span class="number">120</span>;</span><br><span class="line">    System.out.println(s.name);</span><br><span class="line">    System.out.println(s.price);</span><br><span class="line"></span><br><span class="line">    <span class="type">Shop</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Shop</span>(<span class="string">&quot;有参&quot;</span>,<span class="number">130</span>);</span><br><span class="line">    System.out.println(s1.price);</span><br><span class="line">    System.out.println(s1.name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>s里面new Shop里没有参数，对应无参</p><p>s1里面new Shop里有参数，对应有参</p><h3 id="额外知识：Double-和-double"><a href="#额外知识：Double-和-double" class="headerlink" title="额外知识：Double 和 double"></a>额外知识：Double 和 double</h3><ol><li>double是基本数据类型，不是一个类；Double是原始数据类型，是一个类，Object的一个子类</li><li>double没有方法，Double有自己的属性和方法</li><li>double只创建引用，Double创建对象</li><li>集合类不能存放double，只能存放Double</li><li>两者存放位置不同：</li><li>Double 整数报错，double则不会</li></ol><h3 id="3-3构造器的注意事项"><a href="#3-3构造器的注意事项" class="headerlink" title="3.3构造器的注意事项"></a>3.3构造器的注意事项</h3><p>任何类定义出来，默认就自带了无参数构造器，写不写都有。</p><ul><li>但是一旦定义了有参数构造器，无参数构造器就没有了，如果还想用无参数构造器，此时就需要自己手写一个无参数构造器了。否则报错</li></ul><h2 id="4-this关键字"><a href="#4-this关键字" class="headerlink" title="4.this关键字"></a>4.this关键字</h2><h3 id="4-this关键字是什么"><a href="#4-this关键字是什么" class="headerlink" title="4.this关键字是什么"></a>4.this关键字是什么</h3><ul><li>可以出现在构造器、方法中</li><li>代表当前对象的地址</li><li>在构造器无参中，已经出现了this，（虽然是自动生成的）</li><li>this（可以理解为当前对象的成员变量，而不是形参）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Shop</span><span class="params">(String name, <span class="type">double</span> price)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这是有参&quot;</span> + <span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">//加了this是给当前的对象，不加是另一边传过来的形参</span></span><br><span class="line">        <span class="built_in">this</span>.name = name;<span class="comment">//取了一个名称叫name，传给了当前对象的name</span></span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>this是调用对象赋值，不加是直接复制。指定当前对象，好区分分。</p><h2 id="5-封装"><a href="#5-封装" class="headerlink" title="5.封装"></a>5.封装</h2><p>面向对象的三大特征：封装、继承、多态。</p><p><strong>封装的原则；对象代表什么，就得封装对应的数据，并提供对应数据的行为。</strong></p><p>比如人开车，但是“开”是定义在车的方法里，车都会被开，但是人不一定开车。人只是调用这个方法。</p><p>封装思想：可以省下很多的事，大部分常用的方法Sun公司都会提供，不用自己去写了，找到对应的方法就好了。如果实在没用，只能自己写了。</p><p>有什么事，找对象，调方法就行了。</p><p>对象代表什么，就得封装对应的数据，并提供数据对应的行为。</p><h3 id="5-1如何更好的封装"><a href="#5-1如何更好的封装" class="headerlink" title="5.1如何更好的封装"></a>5.1如何更好的封装</h3><p>1.一般建议使用对private（私有、隐藏）关键字修饰。（private修饰的成员只能 在当前类中进行访问）</p><p>2.为每个成员变量提供配套public修饰的getter和setter方法。</p><p>可以在setter里输入条件，满足条件</p><p>所得到的结果都要用条件满足。</p><p>输入值：fan.setAge(30);（对象名.方法名()）</p><p>输出值：System.out.println(fan.getAge());</p><ul><li>“&amp;&amp;”表示 与，意为同时都要满足。“||”表示 或，意为二者或多着只要满足其中一个。</li></ul><h2 id="6-Java-Bean"><a href="#6-Java-Bean" class="headerlink" title="6.Java Bean"></a>6.Java Bean</h2><p>也可以称为实体类，其对象可以用于程序中封装数据。</p><ul><li>用于实体类（学生类、老师类、汽车类），不是什么test类，</li></ul><p>标准JavaBean必须满足如下要求</p><p>1.成员变量使用private修饰</p><p>2.提供成员变量对应的set&#x2F;get方法，暴露其赋值(可能会觉得有set方法要校验加判断，因为数据可能不安全。但是因为数据传过来就已经是一个合法的判断。所以没必要，可以写但没必要)</p><p>3.必须提供一个无参构造器，有参构造器可写可不写。（但是写了有参，必须要写无参）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">private String name;</span><br><span class="line">//无参</span><br><span class="line">public User() &#123;</span><br><span class="line">&#125;</span><br><span class="line">//有参</span><br><span class="line">public User(String name) &#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">&#125;</span><br><span class="line">//get和set方法</span><br><span class="line">public String getName() &#123;</span><br><span class="line">    return name;</span><br><span class="line">&#125;</span><br><span class="line">public void setName(String name) &#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-1set和get"><a href="#6-1set和get" class="headerlink" title="6.1set和get"></a>6.1set和get</h3><p>setName 和 getName只是两个标识符，代表方法。</p><ul><li><strong>setName用来设置的，getName用来获取的</strong>。</li></ul><p>getName，因为name是private不能在其他类中直接获取</p><p>你在一个类里面写的main方法，可以直接访问私有属性，要在外面创建对象，赋值后要通过get方法才能访问属性</p><h2 id="7-补充：成员变量和局部变量"><a href="#7-补充：成员变量和局部变量" class="headerlink" title="7.补充：成员变量和局部变量"></a>7.补充：成员变量和局部变量</h2><p>成员变量：在类中（class类），int age;<strong>默认值0</strong>。堆内存。<strong>对象创建存在</strong></p><p>局部变量：在方法中（main），int age &#x3D; 18;<strong>没有默认值要定义</strong>。栈内存。<strong>方法运行存在</strong></p><p>局部变量的作用域在main方法的大括号里，跳出括号就没有了，成员变量则不好界定。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java八大字符类型</title>
      <link href="/2020/05/01/java/day05-Java%E5%85%AB%E5%A4%A7%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/05/01/java/day05-Java%E5%85%AB%E5%A4%A7%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Java八大字符类型"><a href="#Java八大字符类型" class="headerlink" title="Java八大字符类型"></a>Java八大字符类型</h1><p>*<strong>byte占一个字节范围：-128-127；</strong><br>*<strong>short占两个字节范围：-32768-32767；</strong><br>*<strong>int占4个字节范围；</strong><br>*<strong>long占8字节范围</strong><br>*<strong>float占4个字节</strong><br>*<strong>double占8字节</strong><br>*<strong>char占两字节</strong><br>*<strong>boolean占一字节只有true和false两个；</strong></p><h2 id="1-整数型"><a href="#1-整数型" class="headerlink" title="1.整数型"></a>1.整数型</h2><p>byte numb1&#x3D;15;<br>short numb2&#x3D;15454;<br>int numb3&#x3D;1546875484;<br>long numb4&#x3D;4846498881454454L;&#x2F;&#x2F;long类型要在数字后面加个L</p><h2 id="2-浮点型（小数型）精度高"><a href="#2-浮点型（小数型）精度高" class="headerlink" title="2.浮点型（小数型）精度高"></a>2.浮点型（小数型）精度高</h2><p>flout numb5&#x3D;15.1f;&#x2F;&#x2F;flout要在数字后面加个f;<br>double numb6&#x3D;45.124;</p><h2 id="3-字符型"><a href="#3-字符型" class="headerlink" title="3.字符型"></a>3.字符型</h2><p>char name1&#x3D;’a’;<br>char name2&#x3D;’李’;</p><h2 id="4-字符串，string不是关键字，而是类；"><a href="#4-字符串，string不是关键字，而是类；" class="headerlink" title="4.字符串，string不是关键字，而是类；"></a>4.字符串，string不是关键字，而是类；</h2><p>string name3&#x3D;”李霍霍”;</p><h2 id="5-布尔型：只有是非"><a href="#5-布尔型：只有是非" class="headerlink" title="5.布尔型：只有是非"></a>5.布尔型：只有是非</h2><p>boolean flag&#x3D;true;<br>boolean flag1&#x3D;flase;</p><h2 id="6-数组默认初始化值的规律（额外）"><a href="#6-数组默认初始化值的规律（额外）" class="headerlink" title="6.数组默认初始化值的规律（额外）"></a>6.数组默认初始化值的规律（额外）</h2><p>整数类型：默认初始值为 0</p><p>小数类型：默认初始值为 0.0</p><p>字符类型：默认初始值为 ‘&#x2F;u0000’ 空格</p><p>布尔类型：默认初始值为 false</p><p>引用数据类型：默认初始值为 null（除了这四种之外的）</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java的流程控制语句</title>
      <link href="/2020/04/01/java/day04-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/"/>
      <url>/2020/04/01/java/day04-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章-流程控制语句"><a href="#第一章-流程控制语句" class="headerlink" title="第一章 流程控制语句"></a>第一章 流程控制语句</h2><p>在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。</p><h3 id="1-1-流程控制语句分类"><a href="#1-1-流程控制语句分类" class="headerlink" title="1.1 流程控制语句分类"></a>1.1 流程控制语句分类</h3><p>​顺序结构</p><p>​判断和选择结构(if, switch)</p><p>​循环结构(for, while, do…while)</p><h3 id="1-2-顺序结构"><a href="#1-2-顺序结构" class="headerlink" title="1.2 顺序结构"></a>1.2 顺序结构</h3><p>顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。</p><p>顺序结构执行流程图：</p><p><img src="/Users/fanshiwei/Desktop/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/Java%E5%9F%BA%E7%A1%80-%E8%B5%84%E6%96%99/day04-%E5%88%A4%E6%96%AD%E5%92%8C%E5%BE%AA%E7%8E%AF/%E7%AC%94%E8%AE%B0/..%5C%E7%AC%94%E8%AE%B0%5Cimg%5C1545615769372.png" alt="1545615769372"></p><h2 id="第二章-判断语句：if语句"><a href="#第二章-判断语句：if语句" class="headerlink" title="第二章 判断语句：if语句"></a>第二章 判断语句：if语句</h2><h3 id="2-1-if语句格式1"><a href="#2-1-if语句格式1" class="headerlink" title="2.1 if语句格式1"></a>2.1 if语句格式1</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式的值</p><p>②如果关系表达式的值为true就执行语句体</p><p>③如果关系表达式的值为false就不执行语句体</p><p>④继续执行后面的语句内容</p><p><img src="/Users/fanshiwei/Desktop/Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/Java%E5%9F%BA%E7%A1%80-%E8%B5%84%E6%96%99/day04-%E5%88%A4%E6%96%AD%E5%92%8C%E5%BE%AA%E7%8E%AF/%E7%AC%94%E8%AE%B0/..%5C%E7%AC%94%E8%AE%B0%5Cimg%5C1545616039363.png" alt="1545616039363"></p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line"><span class="comment">//定义两个变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="comment">//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b</span></span><br><span class="line"><span class="keyword">if</span>(a == b) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a等于b&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c</span></span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(a == c) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a等于c&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="练习1：老丈人选女婿"><a href="#练习1：老丈人选女婿" class="headerlink" title="练习1：老丈人选女婿"></a>练习1：老丈人选女婿</h4><p>需求：</p><p>​键盘录入女婿的酒量，如果大于2斤，老丈人给出回应，否则没有任何回应</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.键盘录入女婿的酒量</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入女婿的酒量&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">wine</span> <span class="operator">=</span> sc.nextInt();<span class="comment">//5</span></span><br><span class="line"><span class="comment">//2.对酒量进行一个判断即可</span></span><br><span class="line"><span class="keyword">if</span>(wine &gt; <span class="number">2</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;不错哟，小伙子！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="练习2：考试奖励"><a href="#练习2：考试奖励" class="headerlink" title="练习2：考试奖励"></a>练习2：考试奖励</h4><p>需求：</p><p>​键盘录入一个整数，表示小明的考试名次，如果名次为1，小红可以当小明的女朋有了。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.键盘录入一个整数，表示小明的考试名次</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入小明的名次&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">rank</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"><span class="comment">//2.对小明的考试成绩进行判断即可</span></span><br><span class="line"><span class="keyword">if</span>(rank == <span class="number">1</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;小红成为了小明的女朋友&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第一种格式的细节："><a href="#第一种格式的细节：" class="headerlink" title="第一种格式的细节："></a>第一种格式的细节：</h4><ol><li><p>如果我们要对一个布尔类型的变量进行判断，不要写&#x3D;&#x3D;，直接把变量写在小括号中即可。</p></li><li><p>如果大括号中的语句体只有一条，那么大括号可以省略不写</p><p>如果大括号省略了，那么if只能控制距离他最近的那一条语句。</p><p><strong>建议：</strong>自己不要去写，如果别人这么写了，你要能看懂即可。</p></li></ol><h3 id="2-2-if语句格式2"><a href="#2-2-if语句格式2" class="headerlink" title="2.2 if语句格式2"></a>2.2 if语句格式2</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体<span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    语句体<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式的值</p><p>②如果关系表达式的值为true就执行语句体1</p><p>③如果关系表达式的值为false就执行语句体2</p><p>④继续执行后面的语句内容</p><p><img src="/..%5C%E7%AC%94%E8%AE%B0%5Cimg%5C1545616221283.png" alt="1545616221283"></p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo02</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line"><span class="comment">//定义两个变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="comment">//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b</span></span><br><span class="line"><span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a的值大于b&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;a的值不大于b&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="练习1：吃饭"><a href="#练习1：吃饭" class="headerlink" title="练习1：吃饭"></a>练习1：吃饭</h4><p>需求：</p><p>​    键盘录入一个整数，表示身上的钱。</p><p>​            如果大于等于100块，就是网红餐厅。</p><p>​            否则，就吃经济实惠的沙县小吃。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.键盘录入一个整数。表示身上的钱。</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入一个整数表示身上的钱&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"><span class="comment">//2.对钱进行判断</span></span><br><span class="line"><span class="keyword">if</span>(money &gt;= <span class="number">100</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;吃网红餐厅&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;福建大酒店&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="练习2：影院选座"><a href="#练习2：影院选座" class="headerlink" title="练习2：影院选座"></a>练习2：影院选座</h4><p>需求：</p><p>​在实际开发中，电影院选座也会使用到if判断。</p><p>​假设某影院售卖了100张票，票的序号为1~100。</p><p>​其中奇数票号坐左侧，偶数票号坐右侧。</p><p>​键盘录入一个整数表示电影票的票号。</p><p>​根据不同情况，给出不同的提示：</p><p>​如果票号为奇数，那么打印坐左边。</p><p>​如果票号为偶数，那么打印坐右边。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.键盘录入票号</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入票号&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">ticket</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"><span class="keyword">if</span>(ticket &gt;= <span class="number">1</span> &amp;&amp; ticket &lt;= <span class="number">100</span>)&#123;</span><br><span class="line">    <span class="comment">//合法</span></span><br><span class="line">    <span class="comment">//2.对票号进行判断</span></span><br><span class="line">    <span class="keyword">if</span> (ticket % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//偶数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;坐右边&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//奇数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;坐左边&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//票号不合法</span></span><br><span class="line">    System.out.println(<span class="string">&quot;票号不合法&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-if语句格式3"><a href="#2-3-if语句格式3" class="headerlink" title="2.3 if语句格式3"></a>2.3 if语句格式3</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式<span class="number">1</span>) &#123;</span><br><span class="line">    语句体<span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (关系表达式<span class="number">2</span>) &#123;</span><br><span class="line">    语句体<span class="number">2</span>;</span><br><span class="line">&#125; </span><br><span class="line">…</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    语句体n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式1的值</p><p>②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值</p><p>③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值</p><p>④…</p><p>⑤如果没有任何关系表达式为true，就执行语句体n+1。</p><p><img src="/..%5C%E7%AC%94%E8%AE%B0%5Cimg%5C1545616667104.png" alt="1545616667104"></p><h4 id="练习1：考试奖励"><a href="#练习1：考试奖励" class="headerlink" title="练习1：考试奖励"></a>练习1：考试奖励</h4><p>需求：</p><p>​小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，</p><p>假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。</p><p>分析：</p><p>​①小明的考试成绩未知，可以使用键盘录入的方式获取值</p><p>​②由于奖励种类较多，属于多种判断，采用if…else…if格式实现</p><p>​③为每种判断设置对应的条件</p><p>​④为每种判断设置对应的奖励</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//95~100 自行车一辆</span></span><br><span class="line"><span class="comment">//90~94   游乐场玩一天</span></span><br><span class="line"><span class="comment">//80 ~ 89 变形金刚一个</span></span><br><span class="line"><span class="comment">//80 以下  胖揍一顿</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.键盘录入一个值表示小明的分数</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入小明的成绩&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"><span class="comment">//2.对分数的有效性进行判断</span></span><br><span class="line"><span class="keyword">if</span>(score &gt;= <span class="number">0</span> &amp;&amp; score &lt;= <span class="number">100</span>)&#123;</span><br><span class="line">    <span class="comment">//有效的分数</span></span><br><span class="line">    <span class="comment">//3.对小明的分数进行判断，不同情况执行不同的代码</span></span><br><span class="line">    <span class="keyword">if</span>(score &gt;= <span class="number">95</span> &amp;&amp; score &lt;= <span class="number">100</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;送自行车一辆&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">90</span> &amp;&amp; score &lt;= <span class="number">94</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;游乐场玩一天&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">80</span> &amp;&amp; score &lt;= <span class="number">89</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;变形金刚一个&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;胖揍一顿&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//无效的分数</span></span><br><span class="line">    System.out.println(<span class="string">&quot;分数不合法&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三章-switch语句"><a href="#第三章-switch语句" class="headerlink" title="第三章 switch语句"></a>第三章 switch语句</h2><h3 id="3-1-格式"><a href="#3-1-格式" class="headerlink" title="3.1 格式"></a>3.1 格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (表达式) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">语句体<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">语句体<span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">语句体n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-执行流程："><a href="#3-2-执行流程：" class="headerlink" title="3.2 执行流程："></a>3.2 <strong>执行流程：</strong></h3><ul><li>首先计算出表达式的值 </li><li>其次，和case依次比较，一旦有对应的值，就会执行相应的语句，在执行的过程中，遇到break就会结 束。 </li><li>最后，如果所有的case都和表达式的值不匹配，就会执行default语句体部分，然后程序结束掉。</li></ul><h4 id="练习：运动计划"><a href="#练习：运动计划" class="headerlink" title="练习：运动计划"></a>练习：运动计划</h4><ul><li><p>需求：键盘录入星期数，显示今天的减肥活动。</p><p>周一：跑步  </p><p>周二：游泳  </p><p>周三：慢走  </p><p>周四：动感单车</p><p>周五：拳击  </p><p>周六：爬山  </p><p>周日：好好吃一顿</p></li><li><p>代码示例：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> a01switch选择语句;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.键盘录入一个整数表示星期</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个整数表示星期&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">week</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.书写一个switch语句去跟week进行匹配</span></span><br><span class="line">        <span class="keyword">switch</span> (week)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;跑步&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;游泳&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;慢走&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;动感单车&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;拳击&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;爬山&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;好好吃一顿&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;输入错误，没有这个星期&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-switch的扩展知识："><a href="#3-3-switch的扩展知识：" class="headerlink" title="3.3 switch的扩展知识："></a>3.3 switch的扩展知识：</h3><ul><li><p>default的位置和省略情况</p><p>default可以放在任意位置，也可以省略</p></li><li><p>case穿透</p><p>不写break会引发case穿透现象</p></li><li><p>switch在JDK12的新特性</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="keyword">switch</span> (number) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span> -&gt; System.out.println(<span class="string">&quot;一&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span> -&gt; System.out.println(<span class="string">&quot;二&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span> -&gt; System.out.println(<span class="string">&quot;三&quot;</span>);</span><br><span class="line">    <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;其他&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>switch和if第三种格式各自的使用场景</li></ul><p>当我们需要对一个范围进行判断的时候，用if的第三种格式</p><p>当我们把有限个数据列举出来，选择其中一个执行的时候，用switch语句</p><p>比如：</p><p>​小明的考试成绩，如果用switch，那么需要写100个case，太麻烦了，所以用if简单。</p><p>​如果是星期，月份，客服电话中0~9的功能选择就可以用switch</p><h4 id="练习：休息日和工作日"><a href="#练习：休息日和工作日" class="headerlink" title="练习：休息日和工作日"></a>练习：休息日和工作日</h4><p>需求：键盘录入星期数，输出工作日、休息日。</p><p>(1-5) 工作日，(6-7)休息日。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分析：</span></span><br><span class="line"><span class="comment">//1.键盘录入星期数</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入星期&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">week</span> <span class="operator">=</span> sc.nextInt();<span class="comment">//3</span></span><br><span class="line"><span class="comment">//2.利用switch进行匹配</span></span><br><span class="line">----------------------------------------------------</span><br><span class="line">利用<span class="keyword">case</span>穿透简化代码</span><br><span class="line"><span class="keyword">switch</span> (week)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;工作日&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;休息日&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;没有这个星期&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">----------------------------------------------------</span><br><span class="line">利用JDK12简化代码书写</span><br><span class="line"><span class="keyword">switch</span> (week) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> -&gt; System.out.println(<span class="string">&quot;工作日&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>, <span class="number">7</span> -&gt; System.out.println(<span class="string">&quot;休息日&quot;</span>);</span><br><span class="line">    <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;没有这个星期&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第四章-循环结构"><a href="#第四章-循环结构" class="headerlink" title="第四章 循环结构"></a>第四章 循环结构</h2><h3 id="4-1-for循环结构（掌握）"><a href="#4-1-for循环结构（掌握）" class="headerlink" title="4.1 for循环结构（掌握）"></a>4.1 for循环结构（掌握）</h3><p>​循环语句可以在满足循环条件的情况下，反复执行某一段代码，这段被重复执行的代码被称为循环体语句，当反复 执行这个循环体时，需要在合适的时候把循环判断条件修改为false，从而结束循环，否则循环将一直执行下去，形 成死循环。 </p><h4 id="4-1-1-for循环格式："><a href="#4-1-1-for循环格式：" class="headerlink" title="4.1.1 for循环格式："></a>4.1.1 for循环格式：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化语句;条件判断语句;条件控制语句) &#123;</span><br><span class="line">循环体语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>格式解释：</strong></p><ul><li>初始化语句：  用于表示循环开启时的起始状态，简单说就是循环开始的时候什么样</li><li>条件判断语句：用于表示循环反复执行的条件，简单说就是判断循环是否能一直执行下去</li><li>循环体语句：  用于表示循环反复执行的内容，简单说就是循环反复执行的事情</li><li>条件控制语句：用于表示循环执行中每次变化的内容，简单说就是控制循环是否能执行下去</li></ul><p><strong>执行流程：</strong></p><p>①执行初始化语句</p><p>②执行条件判断语句，看其结果是true还是false</p><p>​             如果是false，循环结束</p><p>​             如果是true，继续执行</p><p>③执行循环体语句</p><p>④执行条件控制语句</p><p>⑤回到②继续</p><p><strong>for循环书写技巧：</strong></p><ul><li>确定循环的开始条件</li><li>确定循环的结束条件</li><li>确定循环要重复执行的代码</li></ul><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.确定循环的开始条件</span></span><br><span class="line"><span class="comment">//2.确定循环的结束条件</span></span><br><span class="line"><span class="comment">//3.确定要重复执行的代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//需求：打印5次HelloWorld</span></span><br><span class="line"><span class="comment">//开始条件：1</span></span><br><span class="line"><span class="comment">//结束条件：5</span></span><br><span class="line"><span class="comment">//重复代码：打印语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="for循环练习-输出数据"><a href="#for循环练习-输出数据" class="headerlink" title="for循环练习-输出数据"></a>for循环练习-输出数据</h5><ul><li>需求：在控制台输出1-5和5-1的数据 </li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//需求：输出数据1-5</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"><span class="comment">//需求：输出数据5-1</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">5</span>; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="for循环练习-求和"><a href="#for循环练习-求和" class="headerlink" title="for循环练习-求和"></a>for循环练习-求和</h5><ul><li>需求：求1-5之间的数据和，并把求和结果在控制台输出  </li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class="line"><span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//从1开始到5结束的数据，使用循环结构完成</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line"><span class="comment">//将反复进行的事情写入循环结构内部</span></span><br><span class="line">             <span class="comment">// 此处反复进行的事情是将数据 i 加到用于保存最终求和的变量 sum 中</span></span><br><span class="line">sum = sum + i;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">sum += i;sum = sum + i;</span></span><br><span class="line"><span class="comment">第一次：sum = sum + i = 0 + 1 = 1;</span></span><br><span class="line"><span class="comment">第二次：sum = sum + i = 1 + 2 = 3;</span></span><br><span class="line"><span class="comment">第三次：sum = sum + i = 3 + 3 = 6;</span></span><br><span class="line"><span class="comment">第四次：sum = sum + i = 6 + 4 = 10;</span></span><br><span class="line"><span class="comment">第五次：sum = sum + i = 10 + 5 = 15;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class="line">System.out.println(<span class="string">&quot;1-5之间的数据和是：&quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>本题要点：<ul><li>今后遇到的需求中，如果带有求和二字，请立即联想到求和变量</li><li>求和变量的定义位置，必须在循环外部，如果在循环内部则计算出的数据将是错误的</li></ul></li></ul><h5 id="for循环练习-求偶数和"><a href="#for循环练习-求偶数和" class="headerlink" title="for循环练习-求偶数和"></a>for循环练习-求偶数和</h5><ul><li>需求：求1-100之间的偶数和，并把求和结果在控制台输出 }</li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class="line"><span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//对1-100的数据求和与1-5的数据求和几乎完全一样，仅仅是结束条件不同</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">100</span>; i++) &#123;</span><br><span class="line"><span class="comment">//对1-100的偶数求和，需要对求和操作添加限制条件，判断是否是偶数</span></span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//sum += i；</span></span><br><span class="line">sum = sum + i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class="line">System.out.println(<span class="string">&quot;1-100之间的偶数和是：&quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="for循环练习-统计次数"><a href="#for循环练习-统计次数" class="headerlink" title="for循环练习-统计次数"></a>for循环练习-统计次数</h5><p>需求：</p><p>​  键盘录入两个数字，表示一个范围。</p><p>​           统计这个范围中。</p><p>​           既能被3整除，又能被5整除数字有多少个？</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-2-while循环"><a href="#4-2-while循环" class="headerlink" title="4.2 while循环"></a>4.2 while循环</h3><h4 id="4-2-1-格式："><a href="#4-2-1-格式：" class="headerlink" title="4.2.1 格式："></a>4.2.1 格式：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">while</span>(条件判断语句)&#123;</span><br><span class="line">循环体;</span><br><span class="line">条件控制语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="练习1：打印5次HelloWorld"><a href="#练习1：打印5次HelloWorld" class="headerlink" title="练习1：打印5次HelloWorld"></a>练习1：打印5次HelloWorld</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt;= <span class="number">5</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(i);</span><br></pre></td></tr></table></figure><h5 id="练习2：珠穆朗玛峰"><a href="#练习2：珠穆朗玛峰" class="headerlink" title="练习2：珠穆朗玛峰"></a>练习2：珠穆朗玛峰</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.定义一个变量表示珠穆朗玛峰的高度</span></span><br><span class="line"><span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> <span class="number">8844430</span>;</span><br><span class="line"><span class="comment">//2.定义一个变量表示纸张的厚度</span></span><br><span class="line"><span class="type">double</span> <span class="variable">paper</span> <span class="operator">=</span> <span class="number">0.1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个计数器（变量），用来统计折叠的次数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.循环折叠纸张</span></span><br><span class="line"><span class="comment">//只有纸张的厚度 &lt; 穆朗玛峰的高度 循环才继续，否则循环就停止</span></span><br><span class="line"><span class="comment">//坑：只有判断为真，循环才会继续</span></span><br><span class="line"><span class="keyword">while</span>(paper &lt; height)&#123;</span><br><span class="line">    <span class="comment">//折叠纸张</span></span><br><span class="line">    paper = paper * <span class="number">2</span>;</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.打印一下纸张的厚度</span></span><br><span class="line">System.out.println(count);<span class="comment">//27</span></span><br></pre></td></tr></table></figure><h3 id="4-3-do…while循环"><a href="#4-3-do…while循环" class="headerlink" title="4.3 do…while循环"></a>4.3 do…while循环</h3><p>本知识点了解即可</p><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    循环体;</span><br><span class="line">    条件控制语句;</span><br><span class="line">&#125;<span class="keyword">while</span>(条件判断语句);</span><br></pre></td></tr></table></figure><p>特点：</p><p>​先执行，再判断。</p><h3 id="4-4-三种格式的区别："><a href="#4-4-三种格式的区别：" class="headerlink" title="4.4 三种格式的区别："></a>4.4 三种格式的区别：</h3><p>​<strong>for和while循环，是先判断，再执行。</strong></p><p>​<strong>do…while是先执行，再判断。</strong></p><p>​<strong>当知道循环次数或者循环范围的时候，用for循环。</strong></p><p>​<strong>当不知道循环次数，也不知道循环范围，但是知道循环的结束条件时，用while循环。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java的运算符</title>
      <link href="/2020/03/01/java/day03-%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2020/03/01/java/day03-%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="1-运算符和表达式"><a href="#1-运算符和表达式" class="headerlink" title="1.运算符和表达式"></a>1.运算符和表达式</h1><h3 id="运算符："><a href="#运算符：" class="headerlink" title="运算符："></a>运算符：</h3><p>​就是对常量或者变量进行操作的符号。</p><p>​比如： +  -  *  &#x2F; </p><h3 id="表达式："><a href="#表达式：" class="headerlink" title="表达式："></a>表达式：</h3><p>​用运算符把常量或者变量连接起来的，符合Java语法的式子就是表达式。</p><p>​比如：a + b 这个整体就是表达式。</p><p>​而其中+是算术运算符的一种，所以这个表达式也称之为算术表达式。</p><h1 id="2-算术运算符"><a href="#2-算术运算符" class="headerlink" title="2.算术运算符"></a>2.算术运算符</h1><p>分类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ - * / %</span><br></pre></td></tr></table></figure><p>运算特点：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ - * :跟小学数学中一模一样没有任何区别.</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/：</span><br><span class="line"><span class="number">1.</span>整数相除结果只能得到整除，如果结果想要是小数，必须要有小数参数。</span><br><span class="line"><span class="number">2.</span>小数直接参与运算，得到的结果有可能是不精确的。</span><br><span class="line">案例：</span><br><span class="line">System.out.println( <span class="number">10</span> / <span class="number">3</span>);<span class="comment">//3</span></span><br><span class="line">System.out.println(<span class="number">10.0</span> / <span class="number">3</span>);<span class="comment">//3.3333333333333335</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%：取模、取余。</span><br><span class="line">   他做的也是除法运算，只不过获取的是余数而已。</span><br><span class="line">案例：</span><br><span class="line">System.out.println(<span class="number">10</span> % <span class="number">2</span>);<span class="comment">//0</span></span><br><span class="line">System.out.println(<span class="number">10</span> % <span class="number">3</span>);<span class="comment">//1</span></span><br><span class="line">应用场景：</span><br><span class="line"><span class="comment">//可以利用取模来判断一个数是奇数还是偶数</span></span><br><span class="line">System.out.println(<span class="number">15</span> % <span class="number">2</span>);<span class="comment">//1  奇数</span></span><br></pre></td></tr></table></figure><h3 id="练习：数值拆分"><a href="#练习：数值拆分" class="headerlink" title="练习：数值拆分"></a>练习：数值拆分</h3><p>需求：键盘录入一个三位数，将其拆分为个位、十位、百位后，打印在控制台</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.键盘录入一个三位数</span></span><br><span class="line"><span class="comment">//导包 --- 创建对象 --- 接收数据</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入一个三位数&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> sc.nextInt();<span class="comment">//123</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.获取这个三位数的个位、十位、百位并打印出来</span></span><br><span class="line"><span class="comment">//公式：</span></span><br><span class="line"><span class="comment">//针对于任意的一个数而言</span></span><br><span class="line"><span class="comment">//个位： 数字 % 10</span></span><br><span class="line"><span class="type">int</span> <span class="variable">ones</span> <span class="operator">=</span> number % <span class="number">10</span>;</span><br><span class="line"><span class="comment">//十位： 数字 / 10 % 10</span></span><br><span class="line"><span class="type">int</span> <span class="variable">tens</span> <span class="operator">=</span> number / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line"><span class="comment">//百位： 数字 / 100 % 10</span></span><br><span class="line"><span class="type">int</span> <span class="variable">hundreds</span> <span class="operator">=</span> number / <span class="number">100</span>  % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">System.out.println(ones);</span><br><span class="line">System.out.println(tens);</span><br><span class="line">System.out.println(hundreds);</span><br></pre></td></tr></table></figure><p>公式：</p><p>​获取任意一个数上每一位数。</p><p>个位：数字 % 10</p><p>十位：数字 &#x2F; 10 % 10</p><p>百位：数字 &#x2F; 100 % 10</p><p>千位：数字 &#x2F; 1000 % 10</p><p>。。。以此类推。。。</p><h1 id="3-隐式转换"><a href="#3-隐式转换" class="headerlink" title="3.隐式转换"></a>3.隐式转换</h1><h3 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h3><p>​也叫自动类型提升。</p><p>​就是把一个取值范围小的数据或者变量，赋值给另一个取值范围大的变量。此时不需要我们额外写代码单独实现，是程序自动帮我们完成的。</p><h3 id="简单记忆："><a href="#简单记忆：" class="headerlink" title="简单记忆："></a>简单记忆：</h3><p>​就是小的给大的，可以直接给。</p><h3 id="两种提升规则："><a href="#两种提升规则：" class="headerlink" title="两种提升规则："></a>两种提升规则：</h3><ul><li>取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算。</li><li>byte、short、char三种类型的数据在运算的时候，都会直接先提升为int，然后再进行运算。</li></ul><h3 id="取值范围从小到大的关系："><a href="#取值范围从小到大的关系：" class="headerlink" title="取值范围从小到大的关系："></a>取值范围从小到大的关系：</h3><p>​byte short int long float double</p><h1 id="4-隐式转换的练习"><a href="#4-隐式转换的练习" class="headerlink" title="4.隐式转换的练习"></a>4.隐式转换的练习</h1><p>请看下面案例是否有误，如果有问题，请说出原因，如果没有问题，请说出运算过程和运算结果</p><h3 id="案例一："><a href="#案例一：" class="headerlink" title="案例一："></a>案例一：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">System.out.println(d);<span class="comment">//10.0</span></span><br></pre></td></tr></table></figure><p>解释：</p><p>​10是整数，整数默认是int类型的。</p><p>​而在取值范围的顺序中：byte short int long float double</p><p>​在赋值的时候把一个int类型的赋值给了一个double类型的。把一个小的赋值给一个大的是可以直接给的。</p><h3 id="案例二："><a href="#案例二：" class="headerlink" title="案例二："></a>案例二：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> b;<span class="comment">//可以成功赋值</span></span><br></pre></td></tr></table></figure><p>解释：</p><p>​因为byte的取值范围是小的，int的取值范围是大的，在底层进行了隐式转换，不需要我们额外写代码单独实现，是可以直接赋值。</p><h3 id="案例三："><a href="#案例三：" class="headerlink" title="案例三："></a>案例三：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">20L</span>;</span><br><span class="line">??? result = i + n;</span><br><span class="line">问变量result是什么类型的？</span><br></pre></td></tr></table></figure><p>解释：</p><p>​变量i是int类型的，变量n是long类型的。</p><p>​而在取值范围的顺序中：byte short int long float double</p><p>​变量i里面的值会自动提升为long类型的，最终的结果其实就是两个long相加，那么最终的result是long类型的。</p><h3 id="案例四："><a href="#案例四：" class="headerlink" title="案例四："></a>案例四：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">100L</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">20.0</span>;</span><br><span class="line">??? result = i + n + d;</span><br><span class="line">问变量result是什么类型的？</span><br></pre></td></tr></table></figure><p>解释：</p><p>​变量i是int类型，变量n是long类型，变量d是double类型。</p><p>​而在取值范围的顺序中：byte short int long float double</p><p>​所以变量i和变量n里面的值在参与运算的时候，都会进行类型提升，变成double。</p><p>​最终其实就是三个double进行相加，那么最终的结果就是double类型的。</p><h3 id="案例五："><a href="#案例五：" class="headerlink" title="案例五："></a>案例五：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">??? result = b1 + b2;<span class="comment">//int</span></span><br><span class="line">问变量result是什么类型的？</span><br></pre></td></tr></table></figure><p>解释：</p><p>​因为b1和b2都是byte类型的。所以在参与计算的时候，变量b1和变量b2里面的值都会自动提升为int类型的。最终其实就是两个int类型的相加，最终结果也是int类型的。</p><h3 id="案例六："><a href="#案例六：" class="headerlink" title="案例六："></a>案例六：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">short</span> <span class="variable">s</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">100L</span>;</span><br><span class="line">??? result = b + s + n;</span><br><span class="line">问变量result是什么类型的？<span class="type">long</span></span><br></pre></td></tr></table></figure><p>解释：</p><p>​变量b是byte类型的，变量s是short类型的，变量n是long类型的。</p><p>​byte，short，char类型的变量在参与运算的时候，变量里面的值会直接先提升为int。</p><p>第一步：变量b和变量s里面的值会先提升为int参与运算。</p><p>​int + int + long</p><p>第二步：而long类型的取值范围是大于int的取值范围的。</p><p>​所以变量b和变量s里面的值会再次提升为long。</p><p>​long + long + long。</p><p>所以最终结果是long类型的。</p><h1 id="5-强制转换"><a href="#5-强制转换" class="headerlink" title="5.强制转换"></a>5.强制转换</h1><h3 id="概念：-1"><a href="#概念：-1" class="headerlink" title="概念："></a>概念：</h3><p>​如果要把一个取值范围大的数据或者变量赋值给另一个取值范围小的变量。是不允许直接操作。</p><p>​如果一定要这么干，就需要加入强制转换。</p><h3 id="书写格式："><a href="#书写格式：" class="headerlink" title="书写格式："></a>书写格式：</h3><p>​目标数据类型 变量名 &#x3D; （目标数据类型）被强转的数据；</p><p>简单理解：</p><p>​要转成什么类型的，那么就在小括号中写什么类型就可以了。</p><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">12.3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">int</span>) a;</span><br><span class="line">        System.out.println(b);<span class="comment">//12</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意点：</p><p>​强制转换有可能会导致数据发生错误。（数据的精度丢失）</p><h1 id="6-字符串的-操作"><a href="#6-字符串的-操作" class="headerlink" title="6.字符串的+操作"></a>6.字符串的+操作</h1><h3 id="核心技巧："><a href="#核心技巧：" class="headerlink" title="核心技巧："></a>核心技巧：</h3><ul><li>当+操作中出现字符串时，此时就是字符串的连接符，会将前后的数据进行拼接，并产生一个新的字符串。</li><li>当连续进行+操作时，从左到右逐个执行的。</li></ul><h1 id="7-字符串相加的练习："><a href="#7-字符串相加的练习：" class="headerlink" title="7.字符串相加的练习："></a>7.字符串相加的练习：</h1><p>案例1：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> + <span class="string">&quot;abc&quot;</span> + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>结果：”1abc1”</p><p>解释：</p><p>​第一步： 1 + “abc”。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”1abc”</p><p>​第二步：  “1abc” + 1。这个过程中，有字符串参与的，所以做的也是拼接操作，产生一个新的字符串”1abc1”</p><p>案例2：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> + <span class="number">2</span> + <span class="string">&quot;abc&quot;</span> + <span class="number">2</span> + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>结果：“3abc21”</p><p>解释：</p><p>​第一步：1 + 2 。在这个过程中，没有字符串参与的，所以做的是加法运算，结果为3。</p><p>​第二步：3 + “abc”。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”3abc”。</p><p>​第三步：”3abc” + 2。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”3abc2”。</p><p>​第四步：”3abc2” + 1。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串“3abc21”</p><p>案例3：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;黑默丁格&quot;</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;我的名字是&quot;</span> + name);</span><br></pre></td></tr></table></figure><p>结果： 我的名字是黑默丁格</p><p>解释：当字符串跟变量相加的时候，实际上是跟变量里面的值进行拼接。</p><h1 id="8-字符的-操作"><a href="#8-字符的-操作" class="headerlink" title="8.字符的+操作"></a>8.字符的+操作</h1><h3 id="规则："><a href="#规则：" class="headerlink" title="规则："></a>规则：</h3><p>​当+操作中出现了字符，会拿着字符到计算机内置的ASCII码表中去查对应的数字，然后再进行计算。</p><h3 id="案例："><a href="#案例：" class="headerlink" title="案例："></a>案例：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> c + <span class="number">0</span>;</span><br><span class="line">System.out.println(result);<span class="comment">//97</span></span><br></pre></td></tr></table></figure><p>ASCII码表中：</p><p>​‘a’   —–    97</p><p>​‘A’   —–    65</p><h1 id="9-算术运算符的总结"><a href="#9-算术运算符的总结" class="headerlink" title="9.算术运算符的总结"></a>9.算术运算符的总结</h1><p>分类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ - * / %  这些操作跟小学数学几乎是一模一样的。</span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>&#x2F; 和 % 的区别：他们两个都是做除法运算，&#x2F;取结果的商。% 取结果的余数。</li><li>整数操作只能得到整数，如果想要得到小数，必须有浮点数参与运算。</li></ul><p>算术运算符的高级用法：</p><p>是以+为例进行的讲解，其余减法，乘法，除法的运算规则也是一样的。</p><p>特例：字符串只有+操作，没有其他操作。</p><h1 id="10-自增自减运算符"><a href="#10-自增自减运算符" class="headerlink" title="10.自增自减运算符"></a>10.自增自减运算符</h1><h3 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">++  自增运算符</span><br><span class="line">--  自减运算符</span><br></pre></td></tr></table></figure><p>++：就是把变量里面的值+1</p><p>–：就是把变量里面的值-1</p><h3 id="使用方式："><a href="#使用方式：" class="headerlink" title="使用方式："></a>使用方式：</h3><ul><li>放在变量的前面，我们叫做先++。 比如：++a</li><li>放在变量的后面，我们叫做后++。 比如：a++</li></ul><h3 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h3><p>​不管是先++，还是后++。单独写在一行的时候，运算结果是一模一样的。</p><h3 id="案例：-1"><a href="#案例：-1" class="headerlink" title="案例："></a>案例：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//++</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">a++;<span class="comment">//就是让变量a里面的值 + 1</span></span><br><span class="line">System.out.println(a);<span class="comment">//11</span></span><br><span class="line">++a;<span class="comment">//就是让变量a里面的值 + 1</span></span><br><span class="line">System.out.println(a);<span class="comment">//12</span></span><br></pre></td></tr></table></figure><h3 id="自增自减运算符的应用场景："><a href="#自增自减运算符的应用场景：" class="headerlink" title="自增自减运算符的应用场景："></a>自增自减运算符的应用场景：</h3><p>某些情况下，变量需要进行加1或者减1的时候使用。</p><p>比如：过生日多一岁，就用到了自增运算符。</p><p>比如：购物商场中，选择商品数量，也用到了自增或者自减运算符。</p><p>比如：统计很多数据中，有多少个数据满足要求，也用到了自增运算符。</p><h1 id="11-赋值运算符"><a href="#11-赋值运算符" class="headerlink" title="11.赋值运算符"></a>11.赋值运算符</h1><p>最为常用的：&#x3D;</p><p>运算过程：就是把等号右边的结果赋值给左边的变量</p><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo6</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.最为简单的赋值运算符用法</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;<span class="comment">//就是把10赋值给变量a</span></span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.如果等号右边需要进行计算。</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a + b;<span class="comment">//先计算等号右边的，把计算的结果赋值给左边的变量</span></span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.特殊的用法</span></span><br><span class="line">        a = a + <span class="number">10</span>;<span class="comment">//先计算等号右边的，把计算的结果赋值给左边的变量</span></span><br><span class="line">        System.out.println(a);<span class="comment">//20</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="12-扩展赋值运算符"><a href="#12-扩展赋值运算符" class="headerlink" title="12.扩展赋值运算符"></a>12.扩展赋值运算符</h1><h3 id="分类：-1"><a href="#分类：-1" class="headerlink" title="分类："></a>分类：</h3><p>​+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D;</p><h3 id="运算规则："><a href="#运算规则：" class="headerlink" title="运算规则："></a>运算规则：</h3><p>​就是把左边跟右边进行运算，把最终的结果赋值给左边，对右边没有任何影响。</p><h3 id="案例：-2"><a href="#案例：-2" class="headerlink" title="案例："></a>案例：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo7</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//扩展赋值运算符</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        a += b;<span class="comment">//把左边和右边相加，再把最终的结果赋值给左边，对右边没有任何影响</span></span><br><span class="line">        <span class="comment">// 相当于 a = a + b;</span></span><br><span class="line">        System.out.println(a);<span class="comment">//30</span></span><br><span class="line">        System.out.println(b);<span class="comment">//20</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意点：-1"><a href="#注意点：-1" class="headerlink" title="注意点："></a>注意点：</h3><p>​扩展的赋值运算符中隐层还包含了一个强制转换。</p><p>以+&#x3D;为例。</p><p>a +&#x3D; b ;实际上相当于 a &#x3D; (byte)(a + b);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo8</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="comment">//a += b;</span></span><br><span class="line">        a = (<span class="type">byte</span>)(a + b);</span><br><span class="line">        System.out.println(a);<span class="comment">//30</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="13-关系运算符"><a href="#13-关系运算符" class="headerlink" title="13.关系运算符"></a>13.关系运算符</h1><p>又叫比较运算符，其实就是拿着左边跟右边进行了判断而已。</p><h3 id="分类：-2"><a href="#分类：-2" class="headerlink" title="分类："></a>分类：</h3><table><thead><tr><th>符号</th><th>解释</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>就是判断左边跟右边是否相等，如果成立就是true，如果不成立就是false</td></tr><tr><td>!&#x3D;</td><td>就是判断左边跟右边是否不相等，如果成立就是true，如果不成立就是false</td></tr><tr><td>&gt;</td><td>就是判断左边是否大于右边，如果成立就是true，如果不成立就是false</td></tr><tr><td>&gt;&#x3D;</td><td>就是判断左边是否大于等于右边，如果成立就是true，如果不成立就是false</td></tr><tr><td>&lt;</td><td>就是判断左边是否小于右边，如果成立就是true，如果不成立就是false</td></tr><tr><td>&lt;&#x3D;</td><td>就是判断左边是否小于等于右边，如果成立就是true，如果不成立就是false</td></tr></tbody></table><h3 id="注意点：-2"><a href="#注意点：-2" class="headerlink" title="注意点："></a>注意点：</h3><ul><li>关系运算符最终的结果一定是布尔类型的。要么是true，要么是false</li><li>在写&#x3D;&#x3D;的时候，千万不要写成&#x3D;</li></ul><h1 id="14-逻辑运算符"><a href="#14-逻辑运算符" class="headerlink" title="14.逻辑运算符"></a>14.逻辑运算符</h1><h3 id="amp-和-的使用："><a href="#amp-和-的使用：" class="headerlink" title="&amp; 和 | 的使用："></a>&amp; 和 | 的使用：</h3><p>&amp;：逻辑与（而且）</p><p>​两边都为真，结果才是真，只要有一个为假，那么结果就是假。</p><p>|：逻辑或（或者）</p><p>​两边都为假，结果才是假，只要有一个为真，那么结果就是真。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &amp;  //两边都是真，结果才是真。</span></span><br><span class="line">System.out.println(<span class="literal">true</span> &amp; <span class="literal">true</span>);<span class="comment">//true</span></span><br><span class="line">System.out.println(<span class="literal">false</span> &amp; <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="literal">true</span> &amp; <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="literal">false</span> &amp; <span class="literal">true</span>);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// | 或  //两边都是假，结果才是假，如果有一个为真，那么结果就是真。</span></span><br><span class="line">System.out.println(<span class="literal">true</span> | <span class="literal">true</span>);<span class="comment">//true</span></span><br><span class="line">System.out.println(<span class="literal">false</span> | <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="literal">true</span> | <span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">System.out.println(<span class="literal">false</span> | <span class="literal">true</span>);<span class="comment">//true</span></span><br></pre></td></tr></table></figure><h3 id="使用场景："><a href="#使用场景：" class="headerlink" title="使用场景："></a>使用场景：</h3><p>​根据固定的场景，来选择使用&amp;还是使用|</p><ul><li><p>用户登录。</p><p>用户名输入正确  &amp; 密码输入正确</p><p>因为只有用户名和密码同时都正确了，那么才能成功登录，只要有一个失败了都不行。</p><p>使用技巧：</p><p>​当我们需要同时满足左边和右边两种情况时，可以使用且</p></li><li><p>丈母娘选女婿</p><p>丈母娘：女婿啊，你要么买个房子，要么买辆车。就可以把我的小棉袄穿走了。</p><p>买个房子 | 买辆车</p><p>两个条件中，只要满足其中一个，就可以穿走小棉袄了。</p><p>使用技巧：</p><p>​当两种条件只要满足其中一个的时候，可以使用或</p></li></ul><h3 id="（异或）的使用："><a href="#（异或）的使用：" class="headerlink" title="^（异或）的使用："></a>^（异或）的使用：</h3><p>​在以后用的不多，了解一下即可。</p><p>计算规则：如果两边相同，结果为false，如果两边不同，结果为true</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//^   //左右不相同，结果才是true，左右相同结果就是false</span></span><br><span class="line">System.out.println(<span class="literal">true</span> ^ <span class="literal">true</span>);<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="literal">false</span> ^ <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="literal">true</span> ^ <span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">System.out.println(<span class="literal">false</span> ^ <span class="literal">true</span>);<span class="comment">//true</span></span><br></pre></td></tr></table></figure><h3 id="（取反）的使用："><a href="#（取反）的使用：" class="headerlink" title="!（取反）的使用："></a>!（取反）的使用：</h3><p>​是取反，也叫做非。</p><p>计算规则：false取反就是true，true取反就是false</p><p>温馨提示：<strong>取反最多只用一个。</strong></p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(!<span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">System.out.println(!<span class="literal">true</span>);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">System.out.println(!!<span class="literal">false</span>);<span class="comment">//注意点：取反最多只用一个。</span></span><br></pre></td></tr></table></figure><h1 id="15-短路逻辑运算符"><a href="#15-短路逻辑运算符" class="headerlink" title="15.短路逻辑运算符"></a>15.短路逻辑运算符</h1><p>分类：  &amp;&amp;   ||</p><h3 id="amp-amp-："><a href="#amp-amp-：" class="headerlink" title="&amp;&amp;："></a>&amp;&amp;：</h3><p>​运算结果跟&amp;是一模一样的，只不过具有短路效果。</p><h3 id="："><a href="#：" class="headerlink" title="||："></a>||：</h3><p>​运算结果跟|是一模一样的。只不过具有短路效果。</p><h3 id="逻辑核心："><a href="#逻辑核心：" class="headerlink" title="逻辑核心："></a>逻辑核心：</h3><p>​当左边不能确定整个表达式的结果，右边才会执行。</p><p>​当左边能确定整个表达式的结果，那么右边就不会执行了。从而提高了代码的运行效率。</p><h3 id="举例："><a href="#举例：" class="headerlink" title="举例："></a>举例：</h3><ul><li><p>用户登录案例</p><p>用户名正确  &amp; 密码正确</p><p>如果使用一个&amp;，不管用户名是否正确都会去验证密码。</p></li></ul><p>思考：</p><p>​如果用户名输入正确了，那么我们再判断密码是否正确，是符合业务逻辑的。</p><p>​但是如果用户名输入错误了，那么现在还有必要去比较密码吗？没有不要了。</p><p>​如果使用一个&amp;，那么左边和右边不管什么情况下，都会执行。</p><p>​用户名正确  &amp;&amp;  密码正确</p><p>​如果用户名输入正确了，那么才会验证密码是否输入正确。</p><p>​如果用户名输入错误了，那么就不会再去验证密码是否正确，最终的结果直接为false。从而提高了程序运行的效率。</p><ul><li><p>丈母娘选女婿</p><p>有房 |  有车</p><p>首先先看看有没有房，发现有，然后再去看看有没有车。</p></li></ul><p>思考：</p><p>​既然都有房子，干嘛还要去看车呢？多此一举。</p><p>​有房 ||  有车</p><p>​首先先看看有没有房，如果有，那么右边就不执行了。最终的结果直接为true。</p><p>​如果没有房子，才会去看右边有没有车。</p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>​&amp;&amp; 和 &amp; 、||和|的运行结果都是一模一样的。</p><p>​但是短路逻辑运算符可以提高程序的运行效率。</p><h3 id="建议："><a href="#建议：" class="headerlink" title="建议："></a>建议：</h3><p>​最为常用： &amp;&amp;   ||   ！</p><h1 id="16-三元运算符"><a href="#16-三元运算符" class="headerlink" title="16.三元运算符"></a>16.三元运算符</h1><p>又叫做：三元表达式或者问号冒号表达式。</p><h3 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h3><p>​关系表达式 ？ 表达式1 ：表达式2 ；</p><h3 id="计算规则："><a href="#计算规则：" class="headerlink" title="计算规则："></a>计算规则：</h3><ul><li>计算关系表达式的值。</li><li>如果关系表达式的值为真，那么执行表达式1。</li><li>如果关系表达式的值为假，那么执行表达式2。</li></ul><h3 id="注意点：-3"><a href="#注意点：-3" class="headerlink" title="注意点："></a>注意点：</h3><p>​三元运算符的最终结果一定要被使用，要么赋值给一个变量，要么直接打印出来。</p><h3 id="案例：-3"><a href="#案例：-3" class="headerlink" title="案例："></a>案例：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo12</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//需求：求两个数的较大值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//格式：关系表达式 ？ 表达式1 ： 表达式2 ；</span></span><br><span class="line">        <span class="comment">//注意点：</span></span><br><span class="line">        <span class="comment">//三元运算符的最终结果一定要被使用。</span></span><br><span class="line">        <span class="comment">//要么赋值给一个变量，要么直接输出。</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span>  a &gt; b ? a : b ;</span><br><span class="line">        System.out.println(max);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(a &gt; b ? a : b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="17-练习1-两只老虎"><a href="#17-练习1-两只老虎" class="headerlink" title="17.练习1-两只老虎"></a>17.练习1-两只老虎</h1><p>需求：</p><p>​动物园里有两只老虎，两只老虎的体重分别为通过键盘录入获得，</p><p>​请用程序实现判断两只老虎的体重是否相同。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.获取两只老虎的体重</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;请输入第一只老虎的体重&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">weight1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">System.out.println(<span class="string">&quot;请输入第二只老虎的体重&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">weight2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.利用三元运算符求出最终结果</span></span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> weight1 == weight2 ? <span class="string">&quot;相同&quot;</span> : <span class="string">&quot;不相同&quot;</span>;</span><br><span class="line">System.out.println(result);</span><br></pre></td></tr></table></figure><h1 id="18-练习2-求三个数的最大值"><a href="#18-练习2-求三个数的最大值" class="headerlink" title="18.练习2-求三个数的最大值"></a>18.练习2-求三个数的最大值</h1><p>需求：</p><p>​一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm。</p><p>​请用程序实现获取这三个和尚的最高身高。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.定义三个变量记录和尚的身高</span></span><br><span class="line"><span class="type">int</span> <span class="variable">height1</span> <span class="operator">=</span> <span class="number">150</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">height2</span> <span class="operator">=</span> <span class="number">210</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">height3</span> <span class="operator">=</span> <span class="number">165</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.利用三元运算符求出两个数中的较大值。</span></span><br><span class="line"><span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> height1 &gt; height2 ? height1 : height2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.求出最终的结果</span></span><br><span class="line"><span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> temp &gt; height3 ? temp : height3;</span><br><span class="line"></span><br><span class="line">System.out.println(max);</span><br></pre></td></tr></table></figure><h1 id="19-运算符的优先级"><a href="#19-运算符的优先级" class="headerlink" title="19.运算符的优先级"></a>19.运算符的优先级</h1><p>在Java中涉及了很多的运算符，每一种运算符都有各自的优先级。但是这些优先级不需要记忆。</p><p>咱们只要知道其中一点：</p><p>​小括号优先于所有。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java的语法</title>
      <link href="/2020/02/01/java/day02-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/02/01/java/day02-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础语法"><a href="#Java基础语法" class="headerlink" title="Java基础语法"></a>Java基础语法</h1><h2 id="一、关键字"><a href="#一、关键字" class="headerlink" title="一、关键字"></a>一、关键字</h2><h3 id="1-1-概念"><a href="#1-1-概念" class="headerlink" title="1.1 概念"></a>1.1 概念</h3><p>​被Java赋予了特定含义的英文单词。</p><table><thead><tr><th><strong>abstract</strong></th><th><strong>assert</strong></th><th><strong>boolean</strong></th><th><strong>break</strong></th><th><strong>byte</strong></th></tr></thead><tbody><tr><td><strong>case</strong></td><td><strong>catch</strong></td><td><strong>char</strong></td><td><strong>class</strong></td><td><strong>const</strong></td></tr><tr><td><strong>continue</strong></td><td><strong>default</strong></td><td><strong>do</strong></td><td><strong>double</strong></td><td><strong>else</strong></td></tr><tr><td><strong>enum</strong></td><td><strong>extends</strong></td><td><strong>final</strong></td><td><strong>finally</strong></td><td><strong>float</strong></td></tr><tr><td><strong>for</strong></td><td><strong>goto</strong></td><td><strong>if</strong></td><td><strong>implements</strong></td><td><strong>import</strong></td></tr><tr><td><strong>instanceof</strong></td><td><strong>int</strong></td><td><strong>interface</strong></td><td><strong>long</strong></td><td><strong>native</strong></td></tr><tr><td><strong>new</strong></td><td><strong>package</strong></td><td><strong>private</strong></td><td><strong>protected</strong></td><td><strong>public</strong></td></tr><tr><td><strong>return</strong></td><td><strong>strictfp</strong></td><td><strong>short</strong></td><td><strong>static</strong></td><td><strong>super</strong></td></tr><tr><td><strong>switch</strong></td><td><strong>synchronized</strong></td><td><strong>this</strong></td><td><strong>throw</strong></td><td><strong>throws</strong></td></tr><tr><td><strong>transient</strong></td><td><strong>try</strong></td><td><strong>void</strong></td><td><strong>volatile</strong></td><td><strong>while</strong></td></tr></tbody></table><h3 id="1-2-第一个关键字class"><a href="#1-2-第一个关键字class" class="headerlink" title="1.2 第一个关键字class"></a>1.2 第一个关键字class</h3><p>​表示定义一个类。创建一个类。</p><p>类：Java项目最基本的组成单元，一个完整的Java项目有可能会有成千上万个类来组成的。</p><p>class后面跟随的就是这个类的名字，简称：类名。</p><p>在类名后面会有一对大括号，表示这个类的内容。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：class表示定义类。</p><p>​类名：HelloWorld</p><p>​HelloWorld后面的大括号表示这个类的范围。</p><h2 id="2、-字面量"><a href="#2、-字面量" class="headerlink" title="2、 字面量"></a>2、 字面量</h2><p>作用：告诉程序员，数据在程序中的书写格式。</p><table><thead><tr><th><strong>字面量类型</strong></th><th><strong>说明</strong></th><th><strong>程序中的写法</strong></th></tr></thead><tbody><tr><td>整数</td><td>不带小数的数字</td><td>666，-88</td></tr><tr><td>小数</td><td>带小数的数字</td><td>13.14，-5.21</td></tr><tr><td>字符</td><td>必须使用单引号，有且仅能一个字符</td><td>‘A’，‘0’，   ‘我’</td></tr><tr><td>字符串</td><td>必须使用双引号，内容可有可无</td><td>“HelloWorld”，“黑马程序员”</td></tr><tr><td>布尔值</td><td>布尔值，表示真假，只有两个值：true，false</td><td>true 、false</td></tr><tr><td>空值</td><td>一个特殊的值，空值</td><td>值是：null</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">10</span>); <span class="comment">// 输出一个整数</span></span><br><span class="line">        System.out.println(<span class="number">5.5</span>); <span class="comment">// 输出一个小数</span></span><br><span class="line">        System.out.println(<span class="string">&#x27;a&#x27;</span>); <span class="comment">// 输出一个字符</span></span><br><span class="line">        System.out.println(<span class="literal">true</span>); <span class="comment">// 输出boolean值true</span></span><br><span class="line">        System.out.println(<span class="string">&quot;欢迎来到我的博客&quot;</span>); <span class="comment">// 输出字符串</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="区分技巧"><a href="#区分技巧" class="headerlink" title="区分技巧"></a>区分技巧</h3><ol><li>不带小数点的数字都是整数类型的字面量。</li><li>只要带了小数点，那么就是小数类型的字面量。</li><li>只要用双引号引起来的，不管里面的内容是什么，不管里面有没有内容，都是字符串类型的字面量。</li><li>字符类型的字面量必须用单引号引起来，不管内容是什么，但是个数有且只能有一个。</li><li>字符类型的字面量只有两个值，true、false。</li><li>空类型的字面量只有一个值，null。</li></ol><h2 id="3、变量"><a href="#3、变量" class="headerlink" title="3、变量"></a>3、变量</h2><h3 id="3-1-什么是变量？"><a href="#3-1-什么是变量？" class="headerlink" title="3.1 什么是变量？"></a>3.1 什么是变量？</h3><p>​变量就在程序中临时存储数据的容器。但是这个容器中只能存一个值。</p><h3 id="3-2-变量的定义格式"><a href="#3-2-变量的定义格式" class="headerlink" title="3.2 变量的定义格式"></a>3.2 变量的定义格式</h3><p>​数据类型 变量名 &#x3D; 数据值； int a &#x3D; 3;</p><h4 id="3-2-1-格式详解"><a href="#3-2-1-格式详解" class="headerlink" title="3.2.1 格式详解"></a>3.2.1 格式详解</h4><p>​数据类型：限定了变量当中能存储什么类型的数据。</p><p>​   如果要存10，那么数据类型就需要写整数类型。</p><p>​   如果要存10.0，那么数据类型就需要写小数类型。</p><p>​变量名：其实就是这个容器的名字。</p><p>​当以后想要使用变量里面的数据时，直接使用变量名就可以了。</p><p>​数据值：真正存储在容器中的数据。</p><p>​分号：表示语句的结束，就跟以前写作文时候的句号是一样的。</p><h4 id="3-2-2-常用的数据类型"><a href="#3-2-2-常用的数据类型" class="headerlink" title="3.2.2 常用的数据类型"></a>3.2.2 常用的数据类型</h4><p>​整数：int</p><p>​小数：（浮点数）double</p><p>举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VariableDemo</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//定义一个整数类型的变量</span></span><br><span class="line"><span class="comment">//数据类型 变量名 = 数据值;</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">16</span>;</span><br><span class="line">System.out.println(a);<span class="comment">//16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个小数类型的变量</span></span><br><span class="line"><span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">10.1</span>;</span><br><span class="line">System.out.println(b);<span class="comment">//10.1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-3-变量的注意事项"><a href="#3-2-3-变量的注意事项" class="headerlink" title="3.2.3 变量的注意事项"></a>3.2.3 变量的注意事项</h4><ul><li>变量名不能重复</li><li>在一条语句中，可以定义多个变量。但是这种方式影响代码的阅读，所以了解一下即可。</li><li>变量在使用之前必须要赋值。</li></ul><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VariableDemo2</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//1.变量名不允许重复</span></span><br><span class="line"><span class="comment">//int a = 10;</span></span><br><span class="line"><span class="comment">//int a = 20;</span></span><br><span class="line"><span class="comment">//System.out.println(a);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.一条语句可以定义多个变量</span></span><br><span class="line"><span class="comment">//了解。</span></span><br><span class="line"><span class="comment">//int a = 10, b = 20, c = 20,d = 20;</span></span><br><span class="line"><span class="comment">//System.out.println(a);//?</span></span><br><span class="line"><span class="comment">//System.out.println(b);//?</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//3.变量在使用之前必须要赋值</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">System.out.println(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、-数据类型"><a href="#4、-数据类型" class="headerlink" title="4、 数据类型"></a>4、 数据类型</h2><h3 id="4-1-Java语言数据类型的分类"><a href="#4-1-Java语言数据类型的分类" class="headerlink" title="4.1 Java语言数据类型的分类"></a>4.1 Java语言数据类型的分类</h3><ul><li>基本数据类型</li><li>引用数据类型（面向对象的时候再深入学习）</li></ul><h3 id="4-2-基本数据类型的四类八种"><a href="#4-2-基本数据类型的四类八种" class="headerlink" title="4.2 基本数据类型的四类八种"></a>4.2 基本数据类型的四类八种</h3><table><thead><tr><th align="center">数据类型</th><th align="center">关键字</th><th align="center">内存占用</th><th align="center">取值范围</th></tr></thead><tbody><tr><td align="center">整数</td><td align="center">byte</td><td align="center">1</td><td align="center">负的2的7次方 ~ 2的7次方-1(-128~127)</td></tr><tr><td align="center"></td><td align="center">short</td><td align="center">2</td><td align="center">负的2的15次方 ~ 2的15次方-1(-32768~32767)</td></tr><tr><td align="center"></td><td align="center">int</td><td align="center">4</td><td align="center">负的2的31次方 ~ 2的31次方-1</td></tr><tr><td align="center"></td><td align="center">long</td><td align="center">8</td><td align="center">负的2的63次方 ~ 2的63次方-1</td></tr><tr><td align="center">浮点数</td><td align="center">float</td><td align="center">4</td><td align="center">1.401298e-45 ~ 3.402823e+38</td></tr><tr><td align="center"></td><td align="center">double</td><td align="center">8</td><td align="center">4.9000000e-324 ~ 1.797693e+308</td></tr><tr><td align="center">字符</td><td align="center">char</td><td align="center">2</td><td align="center">0-65535</td></tr><tr><td align="center">布尔</td><td align="center">boolean</td><td align="center">1</td><td align="center">true，false</td></tr></tbody></table><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>​e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p><p>​在java中整数默认是int类型，浮点数默认是double类型。</p><h4 id="需要记忆以下几点"><a href="#需要记忆以下几点" class="headerlink" title="需要记忆以下几点"></a>需要记忆以下几点</h4><p>byte类型的取值范围：</p><p>​-128 ~ 127</p><p>int类型的大概取值范围：</p><p>​-21亿多  ~ 21亿多</p><p>整数类型和小数类型的取值范围大小关系：</p><p>​double &gt; float &gt; long &gt; int &gt; short &gt; byte</p><p>最为常用的数据类型选择：</p><ul><li><p>在定义变量的时候，要根据实际的情况来选择不同类型的变量。</p><p>比如：人的年龄，可以选择byte类型。</p><p>比如：地球的年龄，可以选择long类型。</p></li><li><p>如果整数类型中，不太确定范围，那么默认使用int类型。</p></li><li><p>如果小数类型中，不太确定范围，那么默认使用double类型。</p></li><li><p>如果要定义字符类型的变量，那么使用char</p></li><li><p>如果要定义布尔类型的变量，那么使用boolean</p></li></ul><h3 id="4-3-定义8种基本数据类型变量"><a href="#4-3-定义8种基本数据类型变量" class="headerlink" title="4.3 定义8种基本数据类型变量"></a>4.3 定义8种基本数据类型变量</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VariableDemo3</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">//1.定义byte类型的变量</span></span><br><span class="line">        <span class="comment">//数据类型 变量名 = 数据值;</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.定义short类型的变量</span></span><br><span class="line">        <span class="type">short</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        System.out.println(b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.定义int类型的变量</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.定义long类型的变量</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">123456789123456789L</span>;</span><br><span class="line">        System.out.println(d);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.定义float类型的变量</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">e</span> <span class="operator">=</span> <span class="number">10.1F</span>;</span><br><span class="line">        System.out.println(e);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.定义double类型的变量</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">20.3</span>;</span><br><span class="line">        System.out.println(f);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//7.定义char类型的变量</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">g</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        System.out.println(g);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//8.定义boolean类型的变量</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">h</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        System.out.println(h);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a><strong>注意点</strong></h4><ul><li>如果要定义 一个整数类型的变量，不知道选择哪种数据类型了，默认使用int。</li><li>如果要定义 一个小数类型的变量，不知道选择哪种数据类型了，默认使用double。</li><li>如果要定义一个long类型的变量，那么在数据值的后面需要加上L后缀。（大小写都可以，建议大写。）</li><li>如果要定义一个float类型的变量，那么在数据值的后面需要加上F后缀。（大小写都可以）</li></ul><h2 id="5、标识符"><a href="#5、标识符" class="headerlink" title="5、标识符"></a>5、标识符</h2><p>业内大多数程序员都在遵守阿里巴巴的命名规则。</p><h3 id="5-1-硬性要求："><a href="#5-1-硬性要求：" class="headerlink" title="5.1 硬性要求："></a>5.1 硬性要求：</h3><p>​必须要这么做，否则代码会报错。</p><ul><li>必须由数字、字母、下划线_、美元符号$组成。</li><li>数字不能开头</li><li>不能是关键字</li><li>区分大小写的。</li></ul><h3 id="5-2-软件建议："><a href="#5-2-软件建议：" class="headerlink" title="5.2 软件建议："></a>5.2 软件建议：</h3><p>​如果不这么做，代码不会报错，但是会让代码显得比较low。</p><h3 id="5-3-小驼峰命名法"><a href="#5-3-小驼峰命名法" class="headerlink" title="5.3 小驼峰命名法"></a>5.3 小驼峰命名法</h3><p>适用于变量名和方法名</p><ul><li><p>如果是一个单词，那么全部小写，比如：name</p></li><li><p>如果是多个单词，那么从第二个单词开始，首字母大写，比如：firstName、maxAge</p></li><li><p><strong>(第二个单词)</strong></p></li></ul><h3 id="5-4大驼峰命名法"><a href="#5-4大驼峰命名法" class="headerlink" title="5.4大驼峰命名法"></a>5.4大驼峰命名法</h3><p>适用于类名</p><ul><li><p>如果是一个单词，那么首字母大写。比如：Demo、Test。</p></li><li><p>如果是多个单词，那么每一个单词首字母都需要大写。比如：HelloWorld</p></li></ul><p>不管起什么名字，都要做到见名知意。</p><p><strong>方法名小写，类名大写</strong></p><h3 id="阿里巴巴命名规范细节："><a href="#阿里巴巴命名规范细节：" class="headerlink" title="阿里巴巴命名规范细节："></a>阿里巴巴命名规范细节：</h3><ol><li><p>尽量不要用拼音。但是一些国际通用的拼音可视为英文单词。</p><p>正确：alibaba、hangzhou、nanjing</p><p>错误：jiage、dazhe</p></li><li><p>平时在给变量名、方法名、类名起名字的时候，不要使用下划线或美元符号。</p><p>错误：_name</p><p>正确：name</p></li></ol><h2 id="7-键盘录入"><a href="#7-键盘录入" class="headerlink" title="7. 键盘录入"></a>7. 键盘录入</h2><p>​键盘录入的实际功能Java已经帮我们写好了，不需要我们自己再实现了，而Java写好的功能都放在了Scanner这个类中，所以，我们只要直接使用Scanner这个类就可以了。</p><p>使用步骤：</p><p>第一步：</p><p>​导包：其实就是表示先找到Scanner这个类在哪。</p><p>第二步：</p><p>​创建对象：其实就表示申明一下，我准备开始用Scanner这个类了。</p><p>第三步：</p><p>​接收数据：也是真正干活的代码。</p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导包，其实就是先找到Scanner这个类在哪</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScannerDemo1</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//2.创建对象，其实就是申明一下，我准备开始用Scanner这个类了。</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="comment">//3.接收数据</span></span><br><span class="line"><span class="comment">//当程序运行之后，我们在键盘输入的数据就会被变量i给接收了</span></span><br><span class="line">System.out.println(<span class="string">&quot;请输入一个数字&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-1-IDEA中层级结构介绍"><a href="#7-1-IDEA中层级结构介绍" class="headerlink" title="7.1 IDEA中层级结构介绍"></a>7.1 IDEA中层级结构介绍</h3><h4 id="7-1-结构分类"><a href="#7-1-结构分类" class="headerlink" title="7.1 结构分类"></a>7.1 结构分类</h4><ul><li>project（项目、工程）</li><li>module（模块）</li><li>package（包）</li><li>class（类）</li></ul><h4 id="7-2-结构介绍"><a href="#7-2-结构介绍" class="headerlink" title="7.2 结构介绍"></a>7.2 结构介绍</h4><p>​为了让大家更好的吸收，package这一层级，我们后面再学习，先学习最基础的project、module、class。</p><h5 id="project（项目、工程）"><a href="#project（项目、工程）" class="headerlink" title="project（项目、工程）"></a>project（项目、工程）</h5><p>​淘宝、京东、程序员网站都属于一个个项目，IDEA中就是一个个的Project。</p><h5 id="module（模块）"><a href="#module（模块）" class="headerlink" title="module（模块）"></a>module（模块）</h5><p>​在一个项目中，可以存放多个模块，不同的模块可以存放项目中不同的业务功能代码。在官方网站中，至少包含了以下模块：</p><ul><li>论坛模块</li><li>报名、咨询模块</li></ul><p>为了更好的管理代码，我们会把代码分别放在两个模块中存放。</p><h5 id="package（包）"><a href="#package（包）" class="headerlink" title="package（包）"></a>package（包）</h5><p>​一个模块中又有很多的业务，以官方网站的论坛模块为例，至少包含了以下不同的业务。</p><ul><li>发帖</li><li>评论</li></ul><p>为了把这些业务区分的更加清楚，就会用包来管理这些不同的业务。</p><h5 id="class（类）"><a href="#class（类）" class="headerlink" title="class（类）"></a>class（类）</h5><p>​就是真正写代码的地方。</p><h4 id="7-3-小结"><a href="#7-3-小结" class="headerlink" title="7.3 小结"></a>7.3 小结</h4><ul><li><p>层级关系</p><p>​project - module - package - class</p></li><li><p>包含数量</p><p>​project中可以创建多个module<br>​module中可以创建多个package<br>​package中可以创建多个class</p><p>​这些结构的划分，是为了方便管理类文件的。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java的基础</title>
      <link href="/2020/01/01/java/day01-Java%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D/"/>
      <url>/2020/01/01/java/day01-Java%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="Java的基础介绍"><a href="#Java的基础介绍" class="headerlink" title="Java的基础介绍"></a>Java的基础介绍</h1><h2 id="1、java的开发流程"><a href="#1、java的开发流程" class="headerlink" title="1、java的开发流程"></a>1、java的开发流程</h2><p>开发Java程序，需要三个步骤：编写程序，编译程序，运行程序。</p><p>​编译文件。编译后会产生一个class文件。</p><p>​java文件：程序员自己编写的代码。</p><p>​class文件：交给计算机执行的文件。</p><p>运行代码</p><p><strong>注意</strong>：运行的是编译之后的class文件。</p><h2 id="2-、HelloWorld常见问题"><a href="#2-、HelloWorld常见问题" class="headerlink" title="2 、HelloWorld常见问题"></a>2 、HelloWorld常见问题</h2><p>2.1、非法字符问题。Java中的符号都是英文格式的。</p><p>2.2、大小写问题。Java语言对大小写敏感（区分大小写）。</p><p>2.3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。</p><p>2.4、编译命令后的java文件名需要带文件后缀.java</p><p>2.5、运行命令后的class文件名（类名）不带文件后缀.class</p><h2 id="3、环境变量"><a href="#3、环境变量" class="headerlink" title="3、环境变量"></a>3、环境变量</h2><h4 id="3-1为什么配置环境变量"><a href="#3-1为什么配置环境变量" class="headerlink" title="3.1为什么配置环境变量"></a>3.1为什么配置环境变量</h4><p>​开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在bin目录下使用，而我们想要在任意目录下都能使用，所以就要配置环境变量。</p><p>注意：现在最新从官网上下载的JDK安装时会自动配置javac、java命令的路径到Path环境变量中去 ，所以javac、java可以直接使用。</p><h2 id="4、-Java的三大平台"><a href="#4、-Java的三大平台" class="headerlink" title="4、 Java的三大平台"></a>4、 Java的三大平台</h2><p>JavaSE、JavaME、JavaEE</p><p>JavaSE是其他两个版本的基础。</p><h4 id="4-1-JavaME"><a href="#4-1-JavaME" class="headerlink" title="4.1 JavaME"></a>4.1 JavaME</h4><p>​Java语言的小型版，用于嵌入式消费类电子设备或者小型移动设备的开发。</p><p>​其中最为主要的还是小型移动设备的开发（手机）。渐渐的没落了，已经被安卓和IOS给替代了。</p><p>​但是，安卓也是可以用Java来开发的。</p><h4 id="4-2-JavaEE"><a href="#4-2-JavaEE" class="headerlink" title="4.2 JavaEE"></a>4.2 JavaEE</h4><p>​用于Web方向的网站开发。（主要从事后台服务器的开发）</p><p>​在服务器领域，Java是当之无愧的龙头老大。</p><h2 id="5、-Java的主要特性"><a href="#5、-Java的主要特性" class="headerlink" title="5、 Java的主要特性"></a>5、 Java的主要特性</h2><ul><li>面向对象</li><li>安全性</li><li>多线程</li><li>简单易用</li><li>开源</li><li>跨平台</li></ul><h4 id="5-1-Java语言跨平台的原理"><a href="#5-1-Java语言跨平台的原理" class="headerlink" title="5.1 Java语言跨平台的原理"></a>5.1 Java语言跨平台的原理</h4><ul><li>操作系统本身其实是不认识Java语言的。</li><li>但是针对于不同的操作系统，Java提供了不同的虚拟机。</li></ul><p>虚拟机会把Java语言翻译成操作系统能看得懂的语言。</p><h2 id="6、-JRE和JDK"><a href="#6、-JRE和JDK" class="headerlink" title="6、 JRE和JDK"></a>6、 JRE和JDK</h2><p>JVM（Java Virtual Machine），Java虚拟机</p><p>JRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）</p><p>JDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具</p><p>总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
